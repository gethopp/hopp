name: Hopp core package CI

on:
  workflow_call:

jobs:
  check-files:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.filter.outputs.core }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Check for changes in core/
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.event.workflow_run.base_sha }}
          filters: |
            core:
              - 'core/**'
      - run: |
          echo "Last commit:"
          git --no-pager log --decorate=short --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' -n1

  fmt:
    runs-on: ubuntu-latest
    needs: check-files
    if: ${{ needs.check-files.outputs.core-changed == 'true' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run rustfmt
        working-directory: core
        run: cargo fmt --all -- --check

  lint:
    name: Lint (clippy)
    runs-on: ${{ matrix.os }}
    needs: check-files
    if: ${{ needs.check-files.outputs.core-changed == 'true' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Install Rust MSRV
        uses: dtolnay/rust-toolchain@1.87.0
        with:
          toolchain: "1.87.0"
          components: clippy

      - name: Cache Cargo builds
        uses: Swatinem/rust-cache@v2

       - name: Set XCode
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          sudo xcode-select -s "/Applications/Xcode_16.2.app"

      - name: Run clippy
        working-directory: core
        run: cargo clippy --target ${{ matrix.target }} --all-features -- -D warnings

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-files
    if: ${{ needs.check-files.outputs.core-changed == 'true' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    env:
      HOPP_CORE_BIN_DEFAULT: "1"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Cache Cargo builds
        uses: Swatinem/rust-cache@v2

      - name: Set XCode
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          sudo xcode-select -s "/Applications/Xcode_16.2.app"

      - name: Build
        working-directory: core
        run: cargo build --release --target ${{ matrix.target }}
